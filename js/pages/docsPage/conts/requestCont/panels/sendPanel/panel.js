!function(){return function e(n,t,r){function o(i,s){if(!t[i]){if(!n[i]){var p="function"==typeof require&&require;if(!s&&p)return p(i,!0);if(a)return a(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var c=t[i]={exports:{}};n[i][0].call(c.exports,function(e){return o(n[i][1][e]||e)},c,c.exports,e,n,t,r)}return t[i].exports}for(var a="function"==typeof require&&require,i=0;i<r.length;i++)o(r[i]);return o}}()({1:[function(e,n,t){n.exports=[{type:"section",title:"Loader Css Api",items:[{type:"para",string:"this api is a async wraper around the html 5 fetch api which is now supported by all the major browsers. basic thought behind the wrapper is that any future changes can be settled and configured to your app without any code changes. this api takes a object with properties of url, body and headers, where body can be a json object and headers are needed to be a jons object with header type as key and header property as a value."},{type:"code",json:{url:"whatever-box",headers:{"Content-Type":"application/json"},body:{test:!0}}},{type:"code",string:"const result = await engine.request(properties)"}]}]},{}],2:[function(e,n,t){let r,o;const a={init:n=>{if(engine.common.tell("panel initiated",!1),null==n||null==n)return engine.common.error("parent_cont_id_not_found");o=(r=n)+"-panel-send",engine.make.init.panel(o,r,"panel"),function(){const n=e(1);engine.global.comp.articleComp.init(o,n)}()},ref:"-panel-send",type:"panel",panelName:"sendPanel",trackers:{title:"Request Api - Vegana Js",meta:[{name:"description",content:"introduction to vegana request api."},{name:"keywords",content:"request,vegana,api"}]}};engine.router.set.panelModule("docsPage","requestCont","sendPanel",a),n.exports=a},{1:1}]},{},[2]);